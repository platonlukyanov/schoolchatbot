import { DateTime, Duration } from "luxon";
import { ScheduleItem } from "../types.js";
import addMinutesToTime from "./addMinutesToTime.js";
import subtractMinutesFromTime from "./subtractMinutesFromTime.js";

interface CallMessage {
    text: string,
    time: string,
}

export default function getMessagesForCall(call: Pick<ScheduleItem, 'start' | 'end' | 'breakTime' | 'order'>): CallMessage[] {
    const constantMessages: CallMessage[] = [
        {
            text: `üîîüîîüîî –£—Ä–æ–∫ ${call.order} –Ω–∞—á–Ω–µ—Ç—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç –≤ ${call.start} –∏ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è –≤ ${call.end}`,
            time: subtractMinutesFromTime(call.start, 5),
        },
        {
            text: `–ü–æ—Ç–æ—Ä–æ–ø–∏—Å—å! üèÉ –£—Ä–æ–∫ ${call.order} –Ω–∞—á–Ω–µ—Ç—Å—è —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É –≤ ${call.start} –∏ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è –≤ ${call.end}`,
            time: subtractMinutesFromTime(call.start, 1),
        },
        {
            text: `üîöüï∞Ô∏è –≠—Ç–æ—Ç —É—Ä–æ–∫ (${call.order}) –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç –≤ ${call.end}`,
            time: subtractMinutesFromTime(call.end, 5),
        }
    ]
2
    const dynamicMessages: CallMessage[] = call.breakTime == '0' ? [] : [
        {
            text: `üí® –ü–µ—Ä–µ–º–µ–Ω–∞ –ø—Ä–æ–¥–ª–∏—Ç—Å—è ${call.breakTime} –º–∏–Ω—É—Ç –∏ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫ –Ω–∞—á–Ω–µ—Ç—Å—è –≤ ${addMinutesToTime(call.end, call.breakTime)}`,
            time: call.end,
        }
    ]

    const messages = [...constantMessages, ...dynamicMessages]

    return messages;
}